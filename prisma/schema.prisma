generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String     @db.VarChar(255)
  content    String?
  published  Boolean    @default(false)
  status     Status     @default(Unknown)
  authorId   Int
  data       Json       @default("{\"Hello \": \"Hello\"}")
  pinnedById Int?       @unique
  comments   Comment[]
  author     User       @relation("WrittenPosts", fields: [authorId], references: [id])
  pinnedBy   User?      @relation("PinnedPost", fields: [pinnedById], references: [id])
  categories Category[] @relation("CategoryToPost")

  @@index([title, content])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  city       String?  @default("Awesome City")
  isAdmin    Boolean  @default(false)
  role       Role     @default(USER)
  posts      Post[]   @relation("WrittenPosts")
  pinnedPost Post?    @relation("PinnedPost")
  profile    Profile?

  @@unique([name, city])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation("CategoryToPost")
}

model Comment {
  id      Int     @id @default(autoincrement())
  title   String  @db.VarChar(200)
  content String?
  postId  Int?
  post    Post?   @relation(fields: [postId], references: [id])
}

model Tag {
  name String @id
}

enum Role {
  USER
  ADMIN
}

enum Status {
  Unknown
  Draft
  InProgress
  InReview
  Published
}
