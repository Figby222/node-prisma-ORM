// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String     @db.VarChar(255)
  content    String?
  published  Boolean    @default(false)
  data       Json       @default("{ \"Hello \": \"Hello\" }")
  role       Role       @default(USER)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  categories Category[]
  comments   Comment[]

  @@unique ([authorId, title])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
  isAdmin Boolean @default(false)
  city    String

  @@unique([name, city])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

enum Role {
  USER
  ADMIN
}

model Comment {
  id      Int    @id @default(autoincrement())
  title   String @db.VarChar(200)
  content String?
  post    Post? @relation(fields: [postId], references: [id])
  postId  Int?
}

model Tag {
  name String @id
}
